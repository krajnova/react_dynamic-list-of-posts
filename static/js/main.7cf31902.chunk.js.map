{"version":3,"sources":["components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","api/posts.js","components/UserSelect.jsx","App.jsx","index.js"],"names":["PostsList","posts","postId","setSelection","className","map","id","userId","title","key","type","onClick","select","BASE_URL","NewCommentForm","useState","name","setName","email","setEmail","body","setBody","message","setMessage","handleChange","event","target","inputName","value","trim","onSubmit","preventDefault","options","method","JSON","stringify","fetch","addComment","placeholder","autoComplete","onChange","PostDetails","post","setPost","comments","setComments","isHidden","hide","useEffect","then","response","json","result","data","getPostDetails","filter","comment","getPostComments","hidden","url","removeComment","UserSelect","changeUser","App","setPosts","setPostId","updatePosts","list","ReactDOM","render","document","getElementById"],"mappings":"mUAIaA,G,iBAAY,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aASzC,OACE,yBAAKC,UAAU,aACb,sCAEA,wBAAIA,UAAU,mBACXH,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,MAAf,OACT,wBACEJ,UAAU,kBACVK,IAAKH,GAEL,6BACE,qCAEGC,EAFH,KAIG,KAEFC,GAEH,4BACEE,KAAK,SACLN,UAAU,2BACVO,QAAS,kBA9BN,SAACL,GAEZH,EADED,IAAWI,EACA,EAEAA,GA0BUM,CAAON,KAErBJ,IAAWI,EAAK,QAAU,gBCrCnCO,EAAW,0C,UCKJC,EAAiB,SAAC,GAAgB,IAAdZ,EAAa,EAAbA,OAAa,EACpBa,mBAAS,IADW,mBACrCC,EADqC,KAC/BC,EAD+B,OAElBF,mBAAS,IAFS,mBAErCG,EAFqC,KAE9BC,EAF8B,OAGpBJ,mBAAS,IAHW,mBAGrCK,EAHqC,KAG/BC,EAH+B,OAIdN,mBAAS,IAJK,mBAIrCO,EAJqC,KAI5BC,EAJ4B,KAMtCC,EAAe,SAACC,GAAW,IAAD,EACKA,EAAMC,OAA3BC,EADgB,EACtBX,KAAiBY,EADK,EACLA,MAEzB,OAAQD,GACN,IAAK,OACHV,EAAQW,EAAMC,QACd,MAEF,IAAK,QACHV,EAASS,EAAMC,QACf,MAEF,IAAK,OACHR,EAAQO,EAAMC,QACd,MAEF,QACEN,EAAW,0BAIjB,OACE,0BACEnB,UAAU,iBACV0B,SAAU,SAACL,GACTA,EAAMM,iBDdP,SAAoB7B,EAAQc,EAAME,EAAOE,GAC9C,IAAMY,EAAU,CACdC,OAAQ,OACRb,KAAMc,KAAKC,UAAU,CACnBjC,SAAQc,OAAME,QAAOE,UAIlBgB,MAAMvB,EAAUmB,GCQjBK,CAAWnC,EAAQc,EAAME,EAAOE,GAChCH,EAAQ,IACRE,EAAS,IACTE,EAAQ,MAGV,yBAAKjB,UAAU,cACb,2BACEM,KAAK,OACLM,KAAK,OACLY,MAAOZ,EACPsB,YAAY,YACZC,aAAa,MACbnC,UAAU,wBACVoC,SAAUhB,KAId,yBAAKpB,UAAU,cACb,2BACEM,KAAK,OACLM,KAAK,QACLY,MAAOV,EACPoB,YAAY,aACZC,aAAa,MACbnC,UAAU,wBACVoC,SAAUhB,KAId,yBAAKpB,UAAU,cACb,8BACEY,KAAK,OACLY,MAAOR,EACPkB,YAAY,oBACZC,aAAa,MACbnC,UAAU,wBACVoC,SAAUhB,KAId,4BACEd,KAAK,SACLN,UAAU,wCAFZ,iBAQEkB,EACK,2BAAIA,GACL,K,UClFCmB,EAAc,SAAC,GAAgB,IAAdvC,EAAa,EAAbA,OAAa,EACjBa,mBAAS,IADQ,mBAClC2B,EADkC,KAC5BC,EAD4B,OAET5B,mBAAS,IAFA,mBAElC6B,EAFkC,KAExBC,EAFwB,OAGhB9B,oBAAS,GAHO,mBAGlC+B,EAHkC,KAGxBC,EAHwB,KAazC,OARAC,qBAAU,YCGL,SAAwB9C,GAC7B,OAAOkC,MAAM,GAAD,OAhBG,uCAgBH,YAAgBlC,IACzB+C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,SDLvBC,CAAepD,GACZ+C,MAAK,SAAAI,GAAI,OAAIV,EAAQU,MFZrB,SAAyBnD,GAC9B,OAAOkC,MAAM,GAAD,OAAIvB,IACboC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,QACtBJ,MAAK,SAAAL,GAAQ,OACZA,EAASW,QAAO,SAAAC,GAAO,OAAIA,EAAQtD,UAAYA,QESjDuD,CAAgBvD,GACb+C,MAAK,SAAAI,GAAI,OAAIR,EAAYQ,QAC3B,CAACnD,EAAQ0C,IAGV,yBAAKxC,UAAU,eACb,4CAAcsC,EAAKpC,GAAnB,cAEA,6BAASF,UAAU,qBACjB,4BAAKsC,EAAKlC,OACV,2BAAIkC,EAAKtB,OAGX,6BAAShB,UAAU,yBACjB,4BACEM,KAAK,SACLN,UAAU,SACVO,QAAS,kBAAMoC,GAAMD,KAHvB,UAKMA,EAAW,OAAS,OAL1B,cAQA,wBACE1C,UAAU,oBACVsD,OAAQZ,GAEPF,EAASvC,KAAI,gBAAGC,EAAH,EAAGA,GAAIc,EAAP,EAAOA,KAAP,OACZ,wBAAIhB,UAAU,0BACZ,4BACEM,KAAK,SACLN,UAAU,oCACVO,QAAS,kBFpClB,SAAuBL,GAC5B,IAAMqD,EAAG,UAAM9C,EAAN,YAAkBP,GAK3B,OAAO8B,MAAMuB,EAJG,CACd1B,OAAQ,WAIPgB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,QE4BIO,CAActD,KAH/B,KAOA,2BAAIc,SAMZ,iCACE,yBAAKhB,UAAU,6BACb,kBAAC,EAAD,CAAgBF,OAAQA,QExDrB2D,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OACxB,qDAGE,4BACE1D,UAAU,qBACVoC,SAAU,SAAAf,GAAK,OAAIqC,EAAWrC,EAAMC,OAAOE,SAE3C,4BAAQA,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,gBACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,wBACA,4BAAQA,MAAM,KAAd,mBACA,4BAAQA,MAAM,KAAd,4BACA,4BAAQA,MAAM,KAAd,mBACA,4BAAQA,MAAM,MAAd,oBC0BSmC,EAvCH,WAAO,IAAD,EACUhD,mBAAS,IADnB,mBACTd,EADS,KACF+D,EADE,OAEYjD,mBAAS,GAFrB,mBAETb,EAFS,KAED+D,EAFC,KAGVC,EAAc,SAAC5D,GFThB,IAAsBC,KEUZD,EFTR8B,MAAM,GAAD,OAHG,yCAIZa,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,QACtBJ,MAAK,SAAChD,GACL,MAAe,MAAXM,EACKN,EAGFA,EAAMsD,QAAO,SAAAb,GAAI,OAAIA,EAAKnC,UAAYA,SEE5C0C,MAAK,SAAAkB,GAAI,OAAIH,EAASG,OAO3B,OAJAnB,qBAAU,WACRkB,EAAY,OACX,IAGD,yBAAK9D,UAAU,OACb,4BAAQA,UAAU,eAChB,kBAAC,EAAD,CAAY0D,WAAYI,KAG1B,0BAAM9D,UAAU,aACd,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEH,MAAOA,EACPE,aAAc8D,EACd/D,OAAQA,KAIZ,yBAAKE,UAAU,gBAEXF,EACI,kBAAC,EAAD,CAAaA,OAAQA,IACrB,OClChBkE,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.7cf31902.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, postId, setSelection }) => {\n  const select = (id) => {\n    if (postId === id) {\n      setSelection(0);\n    } else {\n      setSelection(id);\n    }\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(({ id, userId, title }) => (\n          <li\n            className=\"PostsList__item\"\n            key={id}\n          >\n            <div>\n              <b>\n                [User #\n                {userId}\n                ]:\n                {' '}\n              </b>\n              {title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => select(id)}\n            >\n              {postId === id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  posts: PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  })).isRequired,\n  postId: PropTypes.number.isRequired,\n  setSelection: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com/comments';\n\nexport function getPostComments(postId) {\n  return fetch(`${BASE_URL}`)\n    .then(response => response.json())\n    .then(result => result.data)\n    .then(comments => (\n      comments.filter(comment => comment.postId === +postId)\n    ));\n}\n\nexport function removeComment(id) {\n  const url = `${BASE_URL}/${id}`;\n  const options = {\n    method: 'DELETE',\n  };\n\n  return fetch(url, options)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n\nexport function addComment(postId, name, email, body) {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      postId, name, email, body,\n    }),\n  };\n\n  return fetch(BASE_URL, options);\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleChange = (event) => {\n    const { name: inputName, value } = event.target;\n\n    switch (inputName) {\n      case 'name':\n        setName(value.trim());\n        break;\n\n      case 'email':\n        setEmail(value.trim());\n        break;\n\n      case 'body':\n        setBody(value.trim());\n        break;\n\n      default:\n        setMessage('something went wrong');\n    }\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n\n        addComment(postId, name, email, body);\n        setName('');\n        setEmail('');\n        setBody('');\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Your name\"\n          autoComplete=\"off\"\n          className=\"NewCommentForm__input\"\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          placeholder=\"Your email\"\n          autoComplete=\"off\"\n          className=\"NewCommentForm__input\"\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={body}\n          placeholder=\"Type comment here\"\n          autoComplete=\"off\"\n          className=\"NewCommentForm__input\"\n          onChange={handleChange}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n\n      {\n        message\n          ? (<p>{message}</p>)\n          : ''\n      }\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, removeComment } from '../../api/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ postId }) => {\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [isHidden, hide] = useState(false);\n\n  useEffect(() => {\n    getPostDetails(postId)\n      .then(data => setPost(data));\n\n    getPostComments(postId)\n      .then(data => setComments(data));\n  }, [postId, comments]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>{`Post #${post.id} details:`}</h2>\n\n      <section className=\"PostDetails__post\">\n        <h3>{post.title}</h3>\n        <p>{post.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => hide(!isHidden)}\n        >\n          {`${isHidden ? 'Show' : 'Hide'} comments`}\n        </button>\n\n        <ul\n          className=\"PostDetails__list\"\n          hidden={isHidden}\n        >\n          {comments.map(({ id, body }) => (\n            <li className=\"PostDetails__list-item\">\n              <button\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n                onClick={() => removeComment(id)}\n              >\n                X\n              </button>\n              <p>{body}</p>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm postId={postId} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com/posts';\n\nexport function getUserPosts(userId) {\n  return fetch(`${BASE_URL}`)\n    .then(response => response.json())\n    .then(result => result.data)\n    .then((posts) => {\n      if (userId === '0') {\n        return posts;\n      }\n\n      return posts.filter(post => post.userId === +userId);\n    });\n}\n\nexport function getPostDetails(postId) {\n  return fetch(`${BASE_URL}/${postId}`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const UserSelect = ({ changeUser }) => (\n  <label>\n    Select a user: &nbsp;\n\n    <select\n      className=\"App__user-selector\"\n      onChange={event => changeUser(event.target.value)}\n    >\n      <option value=\"0\">All users</option>\n      <option value=\"1\">Leanne Graham</option>\n      <option value=\"2\">Ervin Howell</option>\n      <option value=\"3\">Clementine Bauch</option>\n      <option value=\"4\">Patricia Lebsack</option>\n      <option value=\"5\">Chelsey Dietrich</option>\n      <option value=\"6\">Mrs. Dennis Schulist</option>\n      <option value=\"7\">Kurtis Weissnat</option>\n      <option value=\"8\">Nicholas Runolfsdottir V</option>\n      <option value=\"9\">Glenna Reichert</option>\n      <option value=\"10\">Leanne Graham</option>\n    </select>\n  </label>\n);\n\nUserSelect.propTypes = {\n  changeUser: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\nimport { UserSelect } from './components/UserSelect';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [postId, setPostId] = useState(0);\n  const updatePosts = (id) => {\n    getUserPosts(id)\n      .then(list => setPosts(list));\n  };\n\n  useEffect(() => {\n    updatePosts('0');\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <UserSelect changeUser={updatePosts} />\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            setSelection={setPostId}\n            postId={postId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {\n            postId\n              ? <PostDetails postId={postId} />\n              : ''\n          }\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}